/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['engine.js']) {
  _$jscoverage['engine.js'] = [];
  _$jscoverage['engine.js'][25] = 0;
  _$jscoverage['engine.js'][28] = 0;
  _$jscoverage['engine.js'][29] = 0;
  _$jscoverage['engine.js'][33] = 0;
  _$jscoverage['engine.js'][81] = 0;
  _$jscoverage['engine.js'][82] = 0;
  _$jscoverage['engine.js'][85] = 0;
  _$jscoverage['engine.js'][94] = 0;
  _$jscoverage['engine.js'][96] = 0;
  _$jscoverage['engine.js'][98] = 0;
  _$jscoverage['engine.js'][99] = 0;
  _$jscoverage['engine.js'][102] = 0;
  _$jscoverage['engine.js'][104] = 0;
  _$jscoverage['engine.js'][112] = 0;
  _$jscoverage['engine.js'][150] = 0;
  _$jscoverage['engine.js'][155] = 0;
  _$jscoverage['engine.js'][156] = 0;
  _$jscoverage['engine.js'][157] = 0;
  _$jscoverage['engine.js'][173] = 0;
  _$jscoverage['engine.js'][174] = 0;
  _$jscoverage['engine.js'][175] = 0;
  _$jscoverage['engine.js'][178] = 0;
  _$jscoverage['engine.js'][180] = 0;
  _$jscoverage['engine.js'][181] = 0;
  _$jscoverage['engine.js'][182] = 0;
  _$jscoverage['engine.js'][183] = 0;
  _$jscoverage['engine.js'][189] = 0;
  _$jscoverage['engine.js'][190] = 0;
  _$jscoverage['engine.js'][191] = 0;
  _$jscoverage['engine.js'][192] = 0;
  _$jscoverage['engine.js'][193] = 0;
  _$jscoverage['engine.js'][196] = 0;
  _$jscoverage['engine.js'][197] = 0;
  _$jscoverage['engine.js'][198] = 0;
  _$jscoverage['engine.js'][199] = 0;
  _$jscoverage['engine.js'][200] = 0;
  _$jscoverage['engine.js'][210] = 0;
  _$jscoverage['engine.js'][211] = 0;
  _$jscoverage['engine.js'][213] = 0;
  _$jscoverage['engine.js'][214] = 0;
  _$jscoverage['engine.js'][217] = 0;
  _$jscoverage['engine.js'][218] = 0;
  _$jscoverage['engine.js'][219] = 0;
  _$jscoverage['engine.js'][223] = 0;
  _$jscoverage['engine.js'][224] = 0;
  _$jscoverage['engine.js'][225] = 0;
  _$jscoverage['engine.js'][247] = 0;
  _$jscoverage['engine.js'][248] = 0;
  _$jscoverage['engine.js'][250] = 0;
  _$jscoverage['engine.js'][253] = 0;
  _$jscoverage['engine.js'][256] = 0;
  _$jscoverage['engine.js'][260] = 0;
  _$jscoverage['engine.js'][261] = 0;
  _$jscoverage['engine.js'][262] = 0;
  _$jscoverage['engine.js'][266] = 0;
  _$jscoverage['engine.js'][267] = 0;
  _$jscoverage['engine.js'][268] = 0;
  _$jscoverage['engine.js'][270] = 0;
  _$jscoverage['engine.js'][274] = 0;
  _$jscoverage['engine.js'][275] = 0;
  _$jscoverage['engine.js'][276] = 0;
  _$jscoverage['engine.js'][278] = 0;
  _$jscoverage['engine.js'][282] = 0;
  _$jscoverage['engine.js'][283] = 0;
  _$jscoverage['engine.js'][285] = 0;
  _$jscoverage['engine.js'][286] = 0;
  _$jscoverage['engine.js'][287] = 0;
  _$jscoverage['engine.js'][288] = 0;
  _$jscoverage['engine.js'][289] = 0;
  _$jscoverage['engine.js'][292] = 0;
  _$jscoverage['engine.js'][293] = 0;
  _$jscoverage['engine.js'][298] = 0;
  _$jscoverage['engine.js'][299] = 0;
  _$jscoverage['engine.js'][303] = 0;
  _$jscoverage['engine.js'][304] = 0;
  _$jscoverage['engine.js'][307] = 0;
  _$jscoverage['engine.js'][308] = 0;
  _$jscoverage['engine.js'][309] = 0;
  _$jscoverage['engine.js'][310] = 0;
  _$jscoverage['engine.js'][315] = 0;
  _$jscoverage['engine.js'][316] = 0;
  _$jscoverage['engine.js'][319] = 0;
  _$jscoverage['engine.js'][320] = 0;
  _$jscoverage['engine.js'][322] = 0;
  _$jscoverage['engine.js'][323] = 0;
  _$jscoverage['engine.js'][326] = 0;
  _$jscoverage['engine.js'][329] = 0;
  _$jscoverage['engine.js'][330] = 0;
  _$jscoverage['engine.js'][332] = 0;
  _$jscoverage['engine.js'][333] = 0;
  _$jscoverage['engine.js'][335] = 0;
  _$jscoverage['engine.js'][336] = 0;
  _$jscoverage['engine.js'][337] = 0;
  _$jscoverage['engine.js'][339] = 0;
  _$jscoverage['engine.js'][342] = 0;
  _$jscoverage['engine.js'][343] = 0;
  _$jscoverage['engine.js'][345] = 0;
  _$jscoverage['engine.js'][346] = 0;
  _$jscoverage['engine.js'][348] = 0;
  _$jscoverage['engine.js'][349] = 0;
  _$jscoverage['engine.js'][351] = 0;
  _$jscoverage['engine.js'][352] = 0;
  _$jscoverage['engine.js'][354] = 0;
  _$jscoverage['engine.js'][355] = 0;
  _$jscoverage['engine.js'][357] = 0;
  _$jscoverage['engine.js'][358] = 0;
  _$jscoverage['engine.js'][360] = 0;
  _$jscoverage['engine.js'][363] = 0;
  _$jscoverage['engine.js'][364] = 0;
  _$jscoverage['engine.js'][365] = 0;
  _$jscoverage['engine.js'][367] = 0;
  _$jscoverage['engine.js'][369] = 0;
  _$jscoverage['engine.js'][370] = 0;
  _$jscoverage['engine.js'][372] = 0;
  _$jscoverage['engine.js'][373] = 0;
  _$jscoverage['engine.js'][375] = 0;
  _$jscoverage['engine.js'][376] = 0;
  _$jscoverage['engine.js'][378] = 0;
  _$jscoverage['engine.js'][379] = 0;
  _$jscoverage['engine.js'][380] = 0;
  _$jscoverage['engine.js'][381] = 0;
  _$jscoverage['engine.js'][384] = 0;
  _$jscoverage['engine.js'][386] = 0;
  _$jscoverage['engine.js'][390] = 0;
  _$jscoverage['engine.js'][391] = 0;
  _$jscoverage['engine.js'][393] = 0;
  _$jscoverage['engine.js'][405] = 0;
  _$jscoverage['engine.js'][408] = 0;
  _$jscoverage['engine.js'][412] = 0;
  _$jscoverage['engine.js'][413] = 0;
  _$jscoverage['engine.js'][414] = 0;
  _$jscoverage['engine.js'][419] = 0;
  _$jscoverage['engine.js'][422] = 0;
  _$jscoverage['engine.js'][424] = 0;
  _$jscoverage['engine.js'][432] = 0;
  _$jscoverage['engine.js'][438] = 0;
  _$jscoverage['engine.js'][440] = 0;
  _$jscoverage['engine.js'][441] = 0;
  _$jscoverage['engine.js'][444] = 0;
  _$jscoverage['engine.js'][462] = 0;
  _$jscoverage['engine.js'][473] = 0;
}
_$jscoverage['engine.js'][25]++;
function Validator(target, schema, options) {
  _$jscoverage['engine.js'][28]++;
  if (! (this instanceof Validator)) {
    _$jscoverage['engine.js'][29]++;
    return new Validator(target, schema, options);
  }
  _$jscoverage['engine.js'][33]++;
  Object.defineProperties(this, {target: {value: target || {}, configurable: true, enumerable: true, writable: true}, options: {value: options || {}, configurable: true, enumerable: false, writable: true}, targetedProps: {value: [], enumerable: true, configurable: true, enumerable: false, writable: true}, validatedProps: {value: [], enumerable: true, configurable: true, enumerable: false, writable: true}, schema: {value: schema && schema.properties? schema: {type: "object", properties: schema || {}}, configurable: true, enumerable: false, writable: true}, keys: {value: [], configurable: true, enumerable: false, writable: true}, errors: {value: [], configurable: true, enumerable: true, writable: true}, is_valid: {get: (function () {
  _$jscoverage['engine.js'][81]++;
  if (! this.errors) {
    _$jscoverage['engine.js'][82]++;
    return true;
  }
  _$jscoverage['engine.js'][85]++;
  return ! this.errors.length;
}), configurable: true, enumerable: true}});
  _$jscoverage['engine.js'][94]++;
  this.validateObject(this.target, this.schema, this.options, this.errors);
  _$jscoverage['engine.js'][96]++;
  var keys = [];
  _$jscoverage['engine.js'][98]++;
  this.keys.forEach((function (key) {
  _$jscoverage['engine.js'][99]++;
  keys.push(key.join("."));
}));
  _$jscoverage['engine.js'][102]++;
  this.keys = keys;
  _$jscoverage['engine.js'][104]++;
  return this;
}
_$jscoverage['engine.js'][112]++;
Object.defineProperties(Validator.prototype, {messages: {value: {required: "is required", minLength: "is too short (minimum is %{expected} characters)", maxLength: "is too long (maximum is %{expected} characters)", pattern: "invalid input", minimum: "must be greater than or equal to %{expected}", maximum: "must be less than or equal to %{expected}", exclusiveMinimum: "must be greater than %{expected}", exclusiveMaximum: "must be less than %{expected}", divisibleBy: "must be divisible by %{expected}", minItems: "must contain more than %{expected} items", maxItems: "must contain less than %{expected} items", uniqueItems: "must hold a unique set of values", format: "is not a valid %{expected}", conform: "must conform to given constraint", type: "must be of %{expected} type", enum: "must be present in given enumerator"}, enumerable: false, writable: true}, formats: {value: {"email": /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i, "ip-address": /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i, "ipv6": /^([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4}$/, "date-time": /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:.\d{1,3})?Z$/, "date": /^\d{4}-\d{2}-\d{2}$/, "time": /^\d{2}:\d{2}:\d{2}$/, "color": /^#[a-z0-9]{6}|#[a-z0-9]{3}|(?:rgb\(\s*(?:[+-]?\d+%?)\s*,\s*(?:[+-]?\d+%?)\s*,\s*(?:[+-]?\d+%?)\s*\))aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|and yellow$/i, "host-name": /^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])/, "utc-millisec": {test: (function (value) {
  _$jscoverage['engine.js'][150]++;
  return typeof value === "number" && value >= 0;
})}, "regex": {test: (function (value) {
  _$jscoverage['engine.js'][155]++;
  try {
    _$jscoverage['engine.js'][155]++;
    new RegExp(value);
  }
  catch (e) {
    _$jscoverage['engine.js'][156]++;
    return false;
  }
  _$jscoverage['engine.js'][157]++;
  return true;
})}}, enumerable: true, writable: true}, formatExtensions: {value: {"url": /^(https?|ftp|git):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i}, enumerable: false, writable: true}, validateObject: {value: (function validateObject(object, schema, options, errors, path) {
  _$jscoverage['engine.js'][173]++;
  var self = this;
  _$jscoverage['engine.js'][174]++;
  var props;
  _$jscoverage['engine.js'][175]++;
  var allProps = Object.keys(object);
  _$jscoverage['engine.js'][178]++;
  if (schema.properties) {
    _$jscoverage['engine.js'][180]++;
    for (var property in schema.properties) {
      _$jscoverage['engine.js'][181]++;
      if (schema.properties.hasOwnProperty(property)) {
        _$jscoverage['engine.js'][182]++;
        this.targetedProps.push(property);
        _$jscoverage['engine.js'][183]++;
        this.validateProperty(object, object[property], property, schema.properties[property], options, errors, property, path || []);
      }
}
  }
  _$jscoverage['engine.js'][189]++;
  if (schema.patternProperties) {
    _$jscoverage['engine.js'][190]++;
    props = schema.patternProperties;
    _$jscoverage['engine.js'][191]++;
    for (var p in props) {
      _$jscoverage['engine.js'][192]++;
      if (props.hasOwnProperty(p)) {
        _$jscoverage['engine.js'][193]++;
        var re = new RegExp(p);
        _$jscoverage['engine.js'][196]++;
        for (var k in object) {
          _$jscoverage['engine.js'][197]++;
          if (object.hasOwnProperty(k)) {
            _$jscoverage['engine.js'][198]++;
            this.targetedProps.push(k);
            _$jscoverage['engine.js'][199]++;
            if (re.exec(k) !== null) {
              _$jscoverage['engine.js'][200]++;
              Validator.property(object, object[k], p, props[p], options, errors);
            }
          }
}
      }
}
  }
  _$jscoverage['engine.js'][210]++;
  if (schema.additionalProperties) {
    _$jscoverage['engine.js'][211]++;
    var i, l;
    _$jscoverage['engine.js'][213]++;
    var unvisitedProps = allProps.filter((function (k) {
  _$jscoverage['engine.js'][214]++;
  return (this.targetedProps.indexOf(k) > 0);
}));
    _$jscoverage['engine.js'][217]++;
    if (schema.additionalProperties === false && unvisitedProps.length > 0) {
      _$jscoverage['engine.js'][218]++;
      for (i = 0, l = unvisitedProps.length; i < l; i++) {
        _$jscoverage['engine.js'][219]++;
        self.error("additionalProperties", unvisitedProps[i], object[unvisitedProps[i]], false, errors);
}
    }
    else {
      _$jscoverage['engine.js'][223]++;
      if (typeof schema.additionalProperties == "object" && unvisitedProps.length > 0) {
        _$jscoverage['engine.js'][224]++;
        for (i = 0, l = unvisitedProps.length; i < l; i++) {
          _$jscoverage['engine.js'][225]++;
          validateProperty(object, object[unvisitedProps[i]], unvisitedProps[i], schema.unvisitedProperties, options, errors, property, path || []);
}
      }
    }
  }
}), enumerable: true, writable: false}, validateProperty: {value: (function validateProperty(object, value, property, schema, options, errors, property, path) {
  _$jscoverage['engine.js'][247]++;
  var self = this;
  _$jscoverage['engine.js'][248]++;
  var format, valid, spec, type;
  _$jscoverage['engine.js'][250]++;
  if ("function" === typeof path.push) {
    _$jscoverage['engine.js'][253]++;
    path.push(property);
    _$jscoverage['engine.js'][256]++;
    self.keys.push(path);
  }
  _$jscoverage['engine.js'][260]++;
  function constrain(name, value, assert) {
    _$jscoverage['engine.js'][261]++;
    if (schema[name] !== undefined && ! assert(value, schema[name])) {
      _$jscoverage['engine.js'][262]++;
      self.error(name, property, value, schema, errors);
    }
}
  _$jscoverage['engine.js'][266]++;
  if (value === undefined) {
    _$jscoverage['engine.js'][267]++;
    if (schema.required && schema.type !== "any") {
      _$jscoverage['engine.js'][268]++;
      return self.error("required", property, undefined, schema, errors);
    }
    else {
      _$jscoverage['engine.js'][270]++;
      return;
    }
  }
  _$jscoverage['engine.js'][274]++;
  if (value === "") {
    _$jscoverage['engine.js'][275]++;
    if (schema.required && schema.type === "string") {
      _$jscoverage['engine.js'][276]++;
      return self.error("required", property, "", schema, errors);
    }
    else {
      _$jscoverage['engine.js'][278]++;
      return;
    }
  }
  _$jscoverage['engine.js'][282]++;
  if (schema.format && options.validateFormats) {
    _$jscoverage['engine.js'][283]++;
    format = schema.format;
    _$jscoverage['engine.js'][285]++;
    if (options.validateFormatExtensions) {
      _$jscoverage['engine.js'][285]++;
      spec = validate.formatExtensions[format];
    }
    _$jscoverage['engine.js'][286]++;
    if (! spec) {
      _$jscoverage['engine.js'][286]++;
      spec = validate.formats[format];
    }
    _$jscoverage['engine.js'][287]++;
    if (! spec) {
      _$jscoverage['engine.js'][288]++;
      if (options.validateFormatsStrict) {
        _$jscoverage['engine.js'][289]++;
        return self.error("format", property, value, schema, errors);
      }
    }
    else {
      _$jscoverage['engine.js'][292]++;
      if (! spec.test(value)) {
        _$jscoverage['engine.js'][293]++;
        return self.error("format", property, value, schema, errors);
      }
    }
  }
  _$jscoverage['engine.js'][298]++;
  if (schema["enum"] && schema["enum"].indexOf(value) === -1) {
    _$jscoverage['engine.js'][299]++;
    self.error("enum", property, value, schema, errors);
  }
  _$jscoverage['engine.js'][303]++;
  if (typeof schema.dependencies === "string" && object[schema.dependencies] === undefined) {
    _$jscoverage['engine.js'][304]++;
    self.error("dependencies", property, null, schema, errors);
  }
  _$jscoverage['engine.js'][307]++;
  if (Array.isArray(schema.dependencies)) {
    _$jscoverage['engine.js'][308]++;
    for (var i = 0, l = schema.dependencies.length; i < l; i++) {
      _$jscoverage['engine.js'][309]++;
      if (object[schema.dependencies[i]] === undefined) {
        _$jscoverage['engine.js'][310]++;
        self.error("dependencies", property, null, schema, errors);
      }
}
  }
  _$jscoverage['engine.js'][315]++;
  if (typeof schema.dependencies === "object") {
    _$jscoverage['engine.js'][316]++;
    self.validateObject(object, schema.dependencies, options, errors);
  }
  _$jscoverage['engine.js'][319]++;
  this.checkType(value, schema.type, (function (err, type) {
  _$jscoverage['engine.js'][320]++;
  if (err) {
    _$jscoverage['engine.js'][320]++;
    return self.error("type", property, typeof value, schema, errors);
  }
  _$jscoverage['engine.js'][322]++;
  constrain("conform", value, (function (a, e) {
  _$jscoverage['engine.js'][323]++;
  return e(a);
}));
  _$jscoverage['engine.js'][326]++;
  switch (type || (Array.isArray(value)? "array": typeof value)) {
  case "string":
    _$jscoverage['engine.js'][329]++;
    constrain("minLength", value.length, (function (a, e) {
  _$jscoverage['engine.js'][330]++;
  return a >= e;
}));
    _$jscoverage['engine.js'][332]++;
    constrain("maxLength", value.length, (function (a, e) {
  _$jscoverage['engine.js'][333]++;
  return a <= e;
}));
    _$jscoverage['engine.js'][335]++;
    constrain("pattern", value, (function (a, e) {
  _$jscoverage['engine.js'][336]++;
  e = typeof e === "string"? e = new RegExp(e): e;
  _$jscoverage['engine.js'][337]++;
  return e.test(a);
}));
    _$jscoverage['engine.js'][339]++;
    break;
  case "number":
    _$jscoverage['engine.js'][342]++;
    constrain("minimum", value, (function (a, e) {
  _$jscoverage['engine.js'][343]++;
  return a >= e;
}));
    _$jscoverage['engine.js'][345]++;
    constrain("maximum", value, (function (a, e) {
  _$jscoverage['engine.js'][346]++;
  return a <= e;
}));
    _$jscoverage['engine.js'][348]++;
    constrain("exclusiveMinimum", value, (function (a, e) {
  _$jscoverage['engine.js'][349]++;
  return a > e;
}));
    _$jscoverage['engine.js'][351]++;
    constrain("exclusiveMaximum", value, (function (a, e) {
  _$jscoverage['engine.js'][352]++;
  return a < e;
}));
    _$jscoverage['engine.js'][354]++;
    constrain("divisibleBy", value, (function (a, e) {
  _$jscoverage['engine.js'][355]++;
  var multiplier = Math.max((a - Math.floor(a)).toString().length - 2, (e - Math.floor(e)).toString().length - 2);
  _$jscoverage['engine.js'][357]++;
  multiplier = multiplier > 0? Math.pow(10, multiplier): 1;
  _$jscoverage['engine.js'][358]++;
  return (a * multiplier) % (e * multiplier) === 0;
}));
    _$jscoverage['engine.js'][360]++;
    break;
  case "array":
    _$jscoverage['engine.js'][363]++;
    constrain("items", value, (function (a, e) {
  _$jscoverage['engine.js'][364]++;
  for (var i = 0, l = a.length; i < l; i++) {
    _$jscoverage['engine.js'][365]++;
    validateProperty(object, a[i], property, e, options, errors, property, path || []);
}
  _$jscoverage['engine.js'][367]++;
  return true;
}));
    _$jscoverage['engine.js'][369]++;
    constrain("minItems", value, (function (a, e) {
  _$jscoverage['engine.js'][370]++;
  return a.length >= e;
}));
    _$jscoverage['engine.js'][372]++;
    constrain("maxItems", value, (function (a, e) {
  _$jscoverage['engine.js'][373]++;
  return a.length <= e;
}));
    _$jscoverage['engine.js'][375]++;
    constrain("uniqueItems", value, (function (a) {
  _$jscoverage['engine.js'][376]++;
  var h = {};
  _$jscoverage['engine.js'][378]++;
  for (var i = 0, l = a.length; i < l; i++) {
    _$jscoverage['engine.js'][379]++;
    var key = JSON.stringify(a[i]);
    _$jscoverage['engine.js'][380]++;
    if (h[key]) {
      _$jscoverage['engine.js'][380]++;
      return false;
    }
    _$jscoverage['engine.js'][381]++;
    h[key] = true;
}
  _$jscoverage['engine.js'][384]++;
  return true;
}));
    _$jscoverage['engine.js'][386]++;
    break;
  case "object":
    _$jscoverage['engine.js'][390]++;
    if (schema.properties || schema.patternProperties || schema.additionalProperties) {
      _$jscoverage['engine.js'][391]++;
      self.validateObject(value, schema, options, errors, path || []);
    }
    _$jscoverage['engine.js'][393]++;
    break;
  }
}));
}), enumerable: true, writable: false}, checkType: {value: (function checkType(val, type, callback) {
  _$jscoverage['engine.js'][405]++;
  var result = false, types = Array.isArray(type)? type: [type];
  _$jscoverage['engine.js'][408]++;
  if (type === undefined) {
    _$jscoverage['engine.js'][408]++;
    return callback(null, type);
  }
  _$jscoverage['engine.js'][412]++;
  for (var i = 0, l = types.length; i < l; i++) {
    _$jscoverage['engine.js'][413]++;
    type = types[i];
    _$jscoverage['engine.js'][414]++;
    if (type === "string"? typeof val === "string": type === "array"? Array.isArray(val): type === "object"? val && typeof val === "object" && ! Array.isArray(val): type === "number"? typeof val === "number": type === "integer"? typeof val === "number" && ~ ~ val === val: type === "null"? val === null: type === "boolean"? typeof val === "boolean": type === "function"? typeof val === "function": type === "any"? typeof val !== "undefined": false) {
      _$jscoverage['engine.js'][419]++;
      return callback(null, type);
    }
}
  _$jscoverage['engine.js'][422]++;
  ;
  _$jscoverage['engine.js'][424]++;
  callback(true);
}), enumerable: true, writable: false}, error: {value: (function error(attribute, property, actual, schema, errors) {
  _$jscoverage['engine.js'][432]++;
  var lookup = {expected: schema[attribute], attribute: attribute, property: property};
  _$jscoverage['engine.js'][438]++;
  var message = schema.messages && schema.messages[attribute] || schema.message || this.messages[attribute] || "no default message";
  _$jscoverage['engine.js'][440]++;
  message = message.replace(/%\{([a-z]+)\}/gi, (function (_, match) {
  _$jscoverage['engine.js'][441]++;
  return lookup[match.toLowerCase()] || "";
}));
  _$jscoverage['engine.js'][444]++;
  errors.push({attribute: attribute, property: property, expected: schema[attribute], actual: actual, message: message});
}), enumerable: true, writable: false}});
_$jscoverage['engine.js'][462]++;
Object.defineProperties(module.exports = Validator, {create: {value: (function create(target, schema, options) {
  _$jscoverage['engine.js'][473]++;
  return new Validator(target, schema, options);
})}});
_$jscoverage['engine.js'].source = ["/**"," * Schema Validation"," *"," * Validators the target Object based on the Schema."," *"," * Required JavaScript capabilities:"," * - Array.isArray"," * - Object.defineProperties"," *"," * @module object-validation"," * @submodule engine"," *"," * @param target {Object}"," * @param schema {Object}"," * @param options {Object}"," * @param options.validateFormats {Object}"," * @param options.validateFormatsStrict {Object}"," * @param options.validateFormatExtensions {Object}"," *"," * @author potanin@UD"," * @date 6/15/13"," *"," * @return {{target: *, valid: boolean, errors: Array}}"," */","function Validator( target, schema, options ) {","","  // Force own context","  if( !( this instanceof Validator ) ) {","    return new Validator( target, schema, options );","  }","","  // new Instance properties","  Object.defineProperties( this, {","    target: {","      value: target || {},","      configurable: true,","      enumerable: true,","      writable: true","    },","    options: {","      value: options || {},","      configurable: true,","      enumerable: false,","      writable: true","    },","    targetedProps: {","      value: [],","      enumerable: true,","      configurable: true,","      enumerable: false,","      writable: true","    },","    validatedProps: {","      value: [],","      enumerable: true,","      configurable: true,","      enumerable: false,","      writable: true","    },","    schema: {","      value: schema &amp;&amp; schema.properties ? schema : { type: 'object', properties: schema || {} },","      configurable: true,","      enumerable: false,","      writable: true","    },","    keys: {","      value: [],","      configurable: true,","      enumerable: false,","      writable: true","    },","    errors: {","      value: [],","      configurable: true,","      enumerable: true,","      writable: true","    },","    is_valid: {","      get: function() {","","        if( !this.errors ) {","          return true;","        }","","        return !this.errors.length;","","      },","      configurable: true,","      enumerable: true","    }","  });","","  // Start Validation","  this.validateObject( this.target, this.schema, this.options, this.errors );","","  var keys = [];","","  this.keys.forEach( function( key ) {","    keys.push( key.join( '.' ) );","  })","","  this.keys = keys;","","  return this;","","}","","/**"," * Prototypal Properties"," *"," */","Object.defineProperties( Validator.prototype, {","  messages: {","    value: {","      required: \"is required\",","      minLength: \"is too short (minimum is %{expected} characters)\",","      maxLength: \"is too long (maximum is %{expected} characters)\",","      pattern: \"invalid input\",","      minimum: \"must be greater than or equal to %{expected}\",","      maximum: \"must be less than or equal to %{expected}\",","      exclusiveMinimum: \"must be greater than %{expected}\",","      exclusiveMaximum: \"must be less than %{expected}\",","      divisibleBy: \"must be divisible by %{expected}\",","      minItems: \"must contain more than %{expected} items\",","      maxItems: \"must contain less than %{expected} items\",","      uniqueItems: \"must hold a unique set of values\",","      format: \"is not a valid %{expected}\",","      conform: \"must conform to given constraint\",","      type: \"must be of %{expected} type\",","      enum: \"must be present in given enumerator\"","    },","    enumerable: false,","    writable: true","  },","  formats: {","    value: {","      'email': /^((([a-z]|\\d|[!#\\$%&amp;'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&amp;'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i,","      'ip-address': /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i,","      'ipv6': /^([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4}$/,","      'date-time': /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:.\\d{1,3})?Z$/,","      'date': /^\\d{4}-\\d{2}-\\d{2}$/,","      'time': /^\\d{2}:\\d{2}:\\d{2}$/,","      'color': /^#[a-z0-9]{6}|#[a-z0-9]{3}|(?:rgb\\(\\s*(?:[+-]?\\d+%?)\\s*,\\s*(?:[+-]?\\d+%?)\\s*,\\s*(?:[+-]?\\d+%?)\\s*\\))aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|and yellow$/i,","      //'style':        (not supported)","      //'phone':        (not supported)","      //'uri':          (not supported)","      'host-name': /^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])/,","      'utc-millisec': {","        test: function( value ) {","          return typeof(value) === 'number' &amp;&amp; value &gt;= 0;","        }","      },","      'regex': {","        test: function( value ) {","          try { new RegExp( value ) }","          catch( e ) { return false }","          return true;","        }","      }","    },","    enumerable: true,","    writable: true","  },","  formatExtensions: {","    value: {","      'url': /^(https?|ftp|git):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i","    },","    enumerable: false,","    writable: true","  },","  validateObject: {","    value: function validateObject( object, schema, options, errors, path ) {","      var self = this;","      var props;","      var allProps = Object.keys( object );","","      // see 5.2","      if( schema.properties ) {","","        for( var property in schema.properties ) {","          if( schema.properties.hasOwnProperty( property ) ) {","            this.targetedProps.push( property );","            this.validateProperty( object, object[property], property, schema.properties[property], options, errors, property, path || [] );","          }","        }","      }","","      // see 5.3","      if( schema.patternProperties ) {","        props = schema.patternProperties;","        for( var p in props ) {","          if( props.hasOwnProperty( p ) ) {","            var re = new RegExp( p );","","            // Find all object properties that are matching `re`","            for( var k in object ) {","              if( object.hasOwnProperty( k ) ) {","                this.targetedProps.push( k );","                if( re.exec( k ) !== null ) {","                  Validator.property( object, object[k], p, props[p], options, errors );","","                }","              }","            }","          }","        }","      }","","      // see 5.4","      if( schema.additionalProperties ) {","        var i, l;","","        var unvisitedProps = allProps.filter( function( k ) {","          return (this.targetedProps.indexOf( k ) &gt; 0);","        });","","        if( schema.additionalProperties === false &amp;&amp; unvisitedProps.length &gt; 0 ) {","          for( i = 0, l = unvisitedProps.length; i &lt; l; i++ ) {","            self.error( \"additionalProperties\", unvisitedProps[i], object[unvisitedProps[i]], false, errors );","          }","        }","","        else if( typeof schema.additionalProperties == \"object\" &amp;&amp; unvisitedProps.length &gt; 0 ) {","          for( i = 0, l = unvisitedProps.length; i &lt; l; i++ ) {","            validateProperty( object, object[unvisitedProps[i]], unvisitedProps[i], schema.unvisitedProperties, options, errors, property, path || [] );","          }","        }","      }","","    },","    enumerable: true,","    writable: false","  },","  validateProperty: {","    /**","     * Validate Single Property","     *","     * @param object","     * @param value","     * @param property","     * @param schema","     * @param options","     * @param errors","     * @returns {*}","     */","    value: function validateProperty( object, value, property, schema, options, errors, property, path ) {","      var self = this;","      var format, valid, spec, type;","","      if( 'function' === typeof path.push ) {","","        // Add current property to path","        path.push( property );","","        // Add to absolute key list","        self.keys.push( path );","","      }","","      function constrain( name, value, assert ) {","        if( schema[name] !== undefined &amp;&amp; !assert( value, schema[name] ) ) {","          self.error( name, property, value, schema, errors );","        }","      }","","      if( value === undefined ) {","        if( schema.required &amp;&amp; schema.type !== 'any' ) {","          return self.error( 'required', property, undefined, schema, errors );","        } else {","          return;","        }","      }","","      if( value === \"\" ) {","        if( schema.required &amp;&amp; schema.type === 'string' ) {","          return self.error( 'required', property, \"\", schema, errors );","        } else {","          return;","        }","      }","","      if( schema.format &amp;&amp; options.validateFormats ) {","        format = schema.format;","","        if( options.validateFormatExtensions ) { spec = validate.formatExtensions[format] }","        if( !spec ) { spec = validate.formats[format] }","        if( !spec ) {","          if( options.validateFormatsStrict ) {","            return self.error( 'format', property, value, schema, errors );","          }","        } else {","          if( !spec.test( value ) ) {","            return self.error( 'format', property, value, schema, errors );","          }","        }","      }","","      if( schema['enum'] &amp;&amp; schema['enum'].indexOf( value ) === -1 ) {","        self.error( 'enum', property, value, schema, errors );","      }","","      // Dependencies (see 5.8)","      if( typeof schema.dependencies === 'string' &amp;&amp; object[schema.dependencies] === undefined ) {","        self.error( 'dependencies', property, null, schema, errors );","      }","","      if( Array.isArray( schema.dependencies ) ) {","        for( var i = 0, l = schema.dependencies.length; i &lt; l; i++ ) {","          if( object[schema.dependencies[i]] === undefined ) {","            self.error( 'dependencies', property, null, schema, errors );","          }","        }","      }","","      if( typeof schema.dependencies === 'object' ) {","        self.validateObject( object, schema.dependencies, options, errors );","      }","","      this.checkType( value, schema.type, function( err, type ) {","        if( err ) return self.error( 'type', property, typeof value, schema, errors );","","        constrain( 'conform', value, function( a, e ) {","          return e( a )","        });","","        switch( type || (Array.isArray( value ) ? 'array' : typeof value) ) {","","          case 'string':","            constrain( 'minLength', value.length, function( a, e ) {","              return a &gt;= e","            });","            constrain( 'maxLength', value.length, function( a, e ) {","              return a &lt;= e","            });","            constrain( 'pattern', value, function( a, e ) {","              e = typeof e === 'string' ? e = new RegExp( e ) : e;","              return e.test( a )","            });","          break;","","          case 'number':","            constrain( 'minimum', value, function( a, e ) {","              return a &gt;= e","            });","            constrain( 'maximum', value, function( a, e ) {","              return a &lt;= e","            });","            constrain( 'exclusiveMinimum', value, function( a, e ) {","              return a &gt; e","            });","            constrain( 'exclusiveMaximum', value, function( a, e ) {","              return a &lt; e","            });","            constrain( 'divisibleBy', value, function( a, e ) {","              var multiplier = Math.max( (a - Math.floor( a )).toString().length - 2,","                (e - Math.floor( e )).toString().length - 2 );","              multiplier = multiplier &gt; 0 ? Math.pow( 10, multiplier ) : 1;","              return (a * multiplier) % (e * multiplier) === 0","            });","          break;","","          case 'array':","            constrain( 'items', value, function( a, e ) {","              for( var i = 0, l = a.length; i &lt; l; i++ ) {","                validateProperty( object, a[i], property, e, options, errors, property, path || [] );","              }","              return true;","            });","            constrain( 'minItems', value, function( a, e ) {","              return a.length &gt;= e","            });","            constrain( 'maxItems', value, function( a, e ) {","              return a.length &lt;= e","            });","            constrain( 'uniqueItems', value, function( a ) {","              var h = {};","","              for( var i = 0, l = a.length; i &lt; l; i++ ) {","                var key = JSON.stringify( a[i] );","                if( h[key] ) return false;","                h[key] = true;","              }","","              return true;","            });","          break;","","          // Recursive validation","          case 'object':","            if( schema.properties || schema.patternProperties || schema.additionalProperties ) {","              self.validateObject( value, schema, options, errors, path || [] );","            }","          break;","","        }","","      });","","    },","    enumerable: true,","    writable: false","  },","  checkType: {","    value: function checkType( val, type, callback ) {","      var result = false, types = Array.isArray( type ) ? type : [type];","","      // No type - no check","      if( type === undefined ) return callback( null, type );","","      // Go through available types","      // And fine first matching","      for( var i = 0, l = types.length; i &lt; l; i++ ) {","        type = types[i];","        if( type === 'string' ? typeof val === 'string' : type === 'array' ? Array.isArray( val ) :","          type === 'object' ? val &amp;&amp; typeof val === 'object' &amp;&amp; !Array.isArray( val ) :","            type === 'number' ? typeof val === 'number' : type === 'integer' ? typeof val === 'number' &amp;&amp; ~~val === val :","              type === 'null' ? val === null : type === 'boolean' ? typeof val === 'boolean' :","                type === 'function' ? typeof val === 'function' : type === 'any' ? typeof val !== 'undefined' : false ) {","          return callback( null, type );","        }","      }","      ;","","      callback( true );","    },","    enumerable: true,","    writable: false","  },","  error: {","    value: function error( attribute, property, actual, schema, errors ) {","","      var lookup = {","        expected: schema[attribute],","        attribute: attribute,","        property: property","      };","","      var message = schema.messages &amp;&amp; schema.messages[attribute] || schema.message || this.messages[attribute] || \"no default message\";","","      message = message.replace( /%\\{([a-z]+)\\}/ig, function( _, match ) {","        return lookup[match.toLowerCase()] || '';","      });","","      errors.push({","        attribute: attribute,","        property: property,","        expected: schema[attribute],","        actual: actual,","        message: message","      });","","    },","    enumerable: true,","    writable: false","  },","});","","/**"," * Constructor Properties"," *"," */","Object.defineProperties( module.exports = Validator, {","  create: {","    /**","     *","     * @param target","     * @param schema","     * @param options","     * @for engine","     * @returns {Validator}","     */","    value: function create( target, schema, options ) {","      return new Validator( target, schema, options );","    }","  }","});"];
