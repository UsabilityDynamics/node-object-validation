/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['engine.js']) {
  _$jscoverage['engine.js'] = [];
  _$jscoverage['engine.js'][25] = 0;
  _$jscoverage['engine.js'][27] = 0;
  _$jscoverage['engine.js'][28] = 0;
  _$jscoverage['engine.js'][32] = 0;
  _$jscoverage['engine.js'][63] = 0;
  _$jscoverage['engine.js'][65] = 0;
  _$jscoverage['engine.js'][77] = 0;
  _$jscoverage['engine.js'][115] = 0;
  _$jscoverage['engine.js'][120] = 0;
  _$jscoverage['engine.js'][121] = 0;
  _$jscoverage['engine.js'][122] = 0;
  _$jscoverage['engine.js'][138] = 0;
  _$jscoverage['engine.js'][139] = 0;
  _$jscoverage['engine.js'][140] = 0;
  _$jscoverage['engine.js'][143] = 0;
  _$jscoverage['engine.js'][144] = 0;
  _$jscoverage['engine.js'][145] = 0;
  _$jscoverage['engine.js'][146] = 0;
  _$jscoverage['engine.js'][147] = 0;
  _$jscoverage['engine.js'][149] = 0;
  _$jscoverage['engine.js'][155] = 0;
  _$jscoverage['engine.js'][156] = 0;
  _$jscoverage['engine.js'][157] = 0;
  _$jscoverage['engine.js'][158] = 0;
  _$jscoverage['engine.js'][159] = 0;
  _$jscoverage['engine.js'][162] = 0;
  _$jscoverage['engine.js'][163] = 0;
  _$jscoverage['engine.js'][164] = 0;
  _$jscoverage['engine.js'][165] = 0;
  _$jscoverage['engine.js'][166] = 0;
  _$jscoverage['engine.js'][176] = 0;
  _$jscoverage['engine.js'][177] = 0;
  _$jscoverage['engine.js'][179] = 0;
  _$jscoverage['engine.js'][180] = 0;
  _$jscoverage['engine.js'][183] = 0;
  _$jscoverage['engine.js'][184] = 0;
  _$jscoverage['engine.js'][185] = 0;
  _$jscoverage['engine.js'][189] = 0;
  _$jscoverage['engine.js'][190] = 0;
  _$jscoverage['engine.js'][191] = 0;
  _$jscoverage['engine.js'][202] = 0;
  _$jscoverage['engine.js'][204] = 0;
  _$jscoverage['engine.js'][206] = 0;
  _$jscoverage['engine.js'][207] = 0;
  _$jscoverage['engine.js'][208] = 0;
  _$jscoverage['engine.js'][212] = 0;
  _$jscoverage['engine.js'][213] = 0;
  _$jscoverage['engine.js'][214] = 0;
  _$jscoverage['engine.js'][216] = 0;
  _$jscoverage['engine.js'][220] = 0;
  _$jscoverage['engine.js'][221] = 0;
  _$jscoverage['engine.js'][222] = 0;
  _$jscoverage['engine.js'][224] = 0;
  _$jscoverage['engine.js'][228] = 0;
  _$jscoverage['engine.js'][229] = 0;
  _$jscoverage['engine.js'][231] = 0;
  _$jscoverage['engine.js'][232] = 0;
  _$jscoverage['engine.js'][233] = 0;
  _$jscoverage['engine.js'][234] = 0;
  _$jscoverage['engine.js'][235] = 0;
  _$jscoverage['engine.js'][238] = 0;
  _$jscoverage['engine.js'][239] = 0;
  _$jscoverage['engine.js'][244] = 0;
  _$jscoverage['engine.js'][245] = 0;
  _$jscoverage['engine.js'][249] = 0;
  _$jscoverage['engine.js'][250] = 0;
  _$jscoverage['engine.js'][253] = 0;
  _$jscoverage['engine.js'][254] = 0;
  _$jscoverage['engine.js'][255] = 0;
  _$jscoverage['engine.js'][256] = 0;
  _$jscoverage['engine.js'][261] = 0;
  _$jscoverage['engine.js'][262] = 0;
  _$jscoverage['engine.js'][265] = 0;
  _$jscoverage['engine.js'][266] = 0;
  _$jscoverage['engine.js'][268] = 0;
  _$jscoverage['engine.js'][269] = 0;
  _$jscoverage['engine.js'][272] = 0;
  _$jscoverage['engine.js'][274] = 0;
  _$jscoverage['engine.js'][275] = 0;
  _$jscoverage['engine.js'][278] = 0;
  _$jscoverage['engine.js'][279] = 0;
  _$jscoverage['engine.js'][282] = 0;
  _$jscoverage['engine.js'][283] = 0;
  _$jscoverage['engine.js'][284] = 0;
  _$jscoverage['engine.js'][286] = 0;
  _$jscoverage['engine.js'][289] = 0;
  _$jscoverage['engine.js'][290] = 0;
  _$jscoverage['engine.js'][292] = 0;
  _$jscoverage['engine.js'][293] = 0;
  _$jscoverage['engine.js'][295] = 0;
  _$jscoverage['engine.js'][296] = 0;
  _$jscoverage['engine.js'][298] = 0;
  _$jscoverage['engine.js'][299] = 0;
  _$jscoverage['engine.js'][301] = 0;
  _$jscoverage['engine.js'][302] = 0;
  _$jscoverage['engine.js'][304] = 0;
  _$jscoverage['engine.js'][305] = 0;
  _$jscoverage['engine.js'][307] = 0;
  _$jscoverage['engine.js'][310] = 0;
  _$jscoverage['engine.js'][311] = 0;
  _$jscoverage['engine.js'][312] = 0;
  _$jscoverage['engine.js'][314] = 0;
  _$jscoverage['engine.js'][316] = 0;
  _$jscoverage['engine.js'][317] = 0;
  _$jscoverage['engine.js'][319] = 0;
  _$jscoverage['engine.js'][320] = 0;
  _$jscoverage['engine.js'][322] = 0;
  _$jscoverage['engine.js'][323] = 0;
  _$jscoverage['engine.js'][325] = 0;
  _$jscoverage['engine.js'][326] = 0;
  _$jscoverage['engine.js'][327] = 0;
  _$jscoverage['engine.js'][328] = 0;
  _$jscoverage['engine.js'][331] = 0;
  _$jscoverage['engine.js'][333] = 0;
  _$jscoverage['engine.js'][337] = 0;
  _$jscoverage['engine.js'][338] = 0;
  _$jscoverage['engine.js'][340] = 0;
  _$jscoverage['engine.js'][352] = 0;
  _$jscoverage['engine.js'][355] = 0;
  _$jscoverage['engine.js'][359] = 0;
  _$jscoverage['engine.js'][360] = 0;
  _$jscoverage['engine.js'][361] = 0;
  _$jscoverage['engine.js'][366] = 0;
  _$jscoverage['engine.js'][369] = 0;
  _$jscoverage['engine.js'][371] = 0;
  _$jscoverage['engine.js'][379] = 0;
  _$jscoverage['engine.js'][385] = 0;
  _$jscoverage['engine.js'][387] = 0;
  _$jscoverage['engine.js'][388] = 0;
  _$jscoverage['engine.js'][391] = 0;
  _$jscoverage['engine.js'][405] = 0;
}
_$jscoverage['engine.js'][25]++;
function Validator(target, schema, options) {
  _$jscoverage['engine.js'][27]++;
  if (! (this instanceof Validator)) {
    _$jscoverage['engine.js'][28]++;
    return new Validator(target, schema, options);
  }
  _$jscoverage['engine.js'][32]++;
  Object.defineProperties(this, {target: {value: target || {}, enumerable: true}, options: {value: options || {}, enumerable: true}, targetedProps: {value: [], enumerable: true, writable: true}, validatedProps: {value: [], enumerable: true, writable: true}, schema: {value: schema || {}, enumerable: true}, errors: {value: [], enumerable: true, writable: true}});
  _$jscoverage['engine.js'][63]++;
  this.validateObject(this.target, this.schema, this.options, this.errors);
  _$jscoverage['engine.js'][65]++;
  return ({object: this.targetedProps, valid: ! this.errors.length, errors: this.errors});
}
_$jscoverage['engine.js'][77]++;
Object.defineProperties(Validator.prototype, {messages: {value: {required: "is required", minLength: "is too short (minimum is %{expected} characters)", maxLength: "is too long (maximum is %{expected} characters)", pattern: "invalid input", minimum: "must be greater than or equal to %{expected}", maximum: "must be less than or equal to %{expected}", exclusiveMinimum: "must be greater than %{expected}", exclusiveMaximum: "must be less than %{expected}", divisibleBy: "must be divisible by %{expected}", minItems: "must contain more than %{expected} items", maxItems: "must contain less than %{expected} items", uniqueItems: "must hold a unique set of values", format: "is not a valid %{expected}", conform: "must conform to given constraint", type: "must be of %{expected} type", enum: "must be present in given enumerator"}, enumerable: false, writable: true}, formats: {value: {"email": /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i, "ip-address": /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i, "ipv6": /^([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4}$/, "date-time": /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:.\d{1,3})?Z$/, "date": /^\d{4}-\d{2}-\d{2}$/, "time": /^\d{2}:\d{2}:\d{2}$/, "color": /^#[a-z0-9]{6}|#[a-z0-9]{3}|(?:rgb\(\s*(?:[+-]?\d+%?)\s*,\s*(?:[+-]?\d+%?)\s*,\s*(?:[+-]?\d+%?)\s*\))aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|and yellow$/i, "host-name": /^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])/, "utc-millisec": {test: (function (value) {
  _$jscoverage['engine.js'][115]++;
  return typeof value === "number" && value >= 0;
})}, "regex": {test: (function (value) {
  _$jscoverage['engine.js'][120]++;
  try {
    _$jscoverage['engine.js'][120]++;
    new RegExp(value);
  }
  catch (e) {
    _$jscoverage['engine.js'][121]++;
    return false;
  }
  _$jscoverage['engine.js'][122]++;
  return true;
})}}, enumerable: true, writable: true}, formatExtensions: {value: {"url": /^(https?|ftp|git):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i}, enumerable: false, writable: true}, validateObject: {value: (function validateObject(object, schema, options, errors) {
  _$jscoverage['engine.js'][138]++;
  var self = this;
  _$jscoverage['engine.js'][139]++;
  var props;
  _$jscoverage['engine.js'][140]++;
  var allProps = Object.keys(object);
  _$jscoverage['engine.js'][143]++;
  if (schema.properties) {
    _$jscoverage['engine.js'][144]++;
    props = schema.properties;
    _$jscoverage['engine.js'][145]++;
    for (var p in props) {
      _$jscoverage['engine.js'][146]++;
      if (props.hasOwnProperty(p)) {
        _$jscoverage['engine.js'][147]++;
        this.targetedProps.push(p);
        _$jscoverage['engine.js'][149]++;
        this.validateProperty(object, object[p], p, props[p], options, errors);
      }
}
  }
  _$jscoverage['engine.js'][155]++;
  if (schema.patternProperties) {
    _$jscoverage['engine.js'][156]++;
    props = schema.patternProperties;
    _$jscoverage['engine.js'][157]++;
    for (var p in props) {
      _$jscoverage['engine.js'][158]++;
      if (props.hasOwnProperty(p)) {
        _$jscoverage['engine.js'][159]++;
        var re = new RegExp(p);
        _$jscoverage['engine.js'][162]++;
        for (var k in object) {
          _$jscoverage['engine.js'][163]++;
          if (object.hasOwnProperty(k)) {
            _$jscoverage['engine.js'][164]++;
            this.targetedProps.push(k);
            _$jscoverage['engine.js'][165]++;
            if (re.exec(k) !== null) {
              _$jscoverage['engine.js'][166]++;
              Validator.property(object, object[k], p, props[p], options, errors);
            }
          }
}
      }
}
  }
  _$jscoverage['engine.js'][176]++;
  if (schema.additionalProperties) {
    _$jscoverage['engine.js'][177]++;
    var i, l;
    _$jscoverage['engine.js'][179]++;
    var unvisitedProps = allProps.filter((function (k) {
  _$jscoverage['engine.js'][180]++;
  return (this.targetedProps.indexOf(k) > 0);
}));
    _$jscoverage['engine.js'][183]++;
    if (schema.additionalProperties === false && unvisitedProps.length > 0) {
      _$jscoverage['engine.js'][184]++;
      for (i = 0, l = unvisitedProps.length; i < l; i++) {
        _$jscoverage['engine.js'][185]++;
        error("additionalProperties", unvisitedProps[i], object[unvisitedProps[i]], false, errors);
}
    }
    else {
      _$jscoverage['engine.js'][189]++;
      if (typeof schema.additionalProperties == "object" && unvisitedProps.length > 0) {
        _$jscoverage['engine.js'][190]++;
        for (i = 0, l = unvisitedProps.length; i < l; i++) {
          _$jscoverage['engine.js'][191]++;
          validateProperty(object, object[unvisitedProps[i]], unvisitedProps[i], schema.unvisitedProperties, options, errors);
}
      }
    }
  }
}), enumerable: true, writable: false}, validateProperty: {value: (function validateProperty(object, value, property, schema, options, errors) {
  _$jscoverage['engine.js'][202]++;
  var self = this;
  _$jscoverage['engine.js'][204]++;
  var format, valid, spec, type;
  _$jscoverage['engine.js'][206]++;
  function constrain(name, value, assert) {
    _$jscoverage['engine.js'][207]++;
    if (schema[name] !== undefined && ! assert(value, schema[name])) {
      _$jscoverage['engine.js'][208]++;
      self.error(name, property, value, schema, errors);
    }
}
  _$jscoverage['engine.js'][212]++;
  if (value === undefined) {
    _$jscoverage['engine.js'][213]++;
    if (schema.required && schema.type !== "any") {
      _$jscoverage['engine.js'][214]++;
      return this.error("required", property, undefined, schema, errors);
    }
    else {
      _$jscoverage['engine.js'][216]++;
      return;
    }
  }
  _$jscoverage['engine.js'][220]++;
  if (value === "") {
    _$jscoverage['engine.js'][221]++;
    if (schema.required && schema.type === "string") {
      _$jscoverage['engine.js'][222]++;
      return error("required", property, "", schema, errors);
    }
    else {
      _$jscoverage['engine.js'][224]++;
      return;
    }
  }
  _$jscoverage['engine.js'][228]++;
  if (schema.format && options.validateFormats) {
    _$jscoverage['engine.js'][229]++;
    format = schema.format;
    _$jscoverage['engine.js'][231]++;
    if (options.validateFormatExtensions) {
      _$jscoverage['engine.js'][231]++;
      spec = validate.formatExtensions[format];
    }
    _$jscoverage['engine.js'][232]++;
    if (! spec) {
      _$jscoverage['engine.js'][232]++;
      spec = validate.formats[format];
    }
    _$jscoverage['engine.js'][233]++;
    if (! spec) {
      _$jscoverage['engine.js'][234]++;
      if (options.validateFormatsStrict) {
        _$jscoverage['engine.js'][235]++;
        return error("format", property, value, schema, errors);
      }
    }
    else {
      _$jscoverage['engine.js'][238]++;
      if (! spec.test(value)) {
        _$jscoverage['engine.js'][239]++;
        return error("format", property, value, schema, errors);
      }
    }
  }
  _$jscoverage['engine.js'][244]++;
  if (schema["enum"] && schema["enum"].indexOf(value) === -1) {
    _$jscoverage['engine.js'][245]++;
    error("enum", property, value, schema, errors);
  }
  _$jscoverage['engine.js'][249]++;
  if (typeof schema.dependencies === "string" && object[schema.dependencies] === undefined) {
    _$jscoverage['engine.js'][250]++;
    error("dependencies", property, null, schema, errors);
  }
  _$jscoverage['engine.js'][253]++;
  if (Array.isArray(schema.dependencies)) {
    _$jscoverage['engine.js'][254]++;
    for (var i = 0, l = schema.dependencies.length; i < l; i++) {
      _$jscoverage['engine.js'][255]++;
      if (object[schema.dependencies[i]] === undefined) {
        _$jscoverage['engine.js'][256]++;
        error("dependencies", property, null, schema, errors);
      }
}
  }
  _$jscoverage['engine.js'][261]++;
  if (typeof schema.dependencies === "object") {
    _$jscoverage['engine.js'][262]++;
    self.validateObject(object, schema.dependencies, options, errors);
  }
  _$jscoverage['engine.js'][265]++;
  this.checkType(value, schema.type, (function (err, type) {
  _$jscoverage['engine.js'][266]++;
  if (err) {
    _$jscoverage['engine.js'][266]++;
    return error("type", property, typeof value, schema, errors);
  }
  _$jscoverage['engine.js'][268]++;
  constrain("conform", value, (function (a, e) {
  _$jscoverage['engine.js'][269]++;
  return e(a);
}));
  _$jscoverage['engine.js'][272]++;
  switch (type || (Array.isArray(value)? "array": typeof value)) {
  case "string":
    _$jscoverage['engine.js'][274]++;
    constrain("minLength", value.length, (function (a, e) {
  _$jscoverage['engine.js'][275]++;
  return a >= e;
}));
    _$jscoverage['engine.js'][278]++;
    constrain("maxLength", value.length, (function (a, e) {
  _$jscoverage['engine.js'][279]++;
  return a <= e;
}));
    _$jscoverage['engine.js'][282]++;
    constrain("pattern", value, (function (a, e) {
  _$jscoverage['engine.js'][283]++;
  e = typeof e === "string"? e = new RegExp(e): e;
  _$jscoverage['engine.js'][284]++;
  return e.test(a);
}));
    _$jscoverage['engine.js'][286]++;
    break;
  case "number":
    _$jscoverage['engine.js'][289]++;
    constrain("minimum", value, (function (a, e) {
  _$jscoverage['engine.js'][290]++;
  return a >= e;
}));
    _$jscoverage['engine.js'][292]++;
    constrain("maximum", value, (function (a, e) {
  _$jscoverage['engine.js'][293]++;
  return a <= e;
}));
    _$jscoverage['engine.js'][295]++;
    constrain("exclusiveMinimum", value, (function (a, e) {
  _$jscoverage['engine.js'][296]++;
  return a > e;
}));
    _$jscoverage['engine.js'][298]++;
    constrain("exclusiveMaximum", value, (function (a, e) {
  _$jscoverage['engine.js'][299]++;
  return a < e;
}));
    _$jscoverage['engine.js'][301]++;
    constrain("divisibleBy", value, (function (a, e) {
  _$jscoverage['engine.js'][302]++;
  var multiplier = Math.max((a - Math.floor(a)).toString().length - 2, (e - Math.floor(e)).toString().length - 2);
  _$jscoverage['engine.js'][304]++;
  multiplier = multiplier > 0? Math.pow(10, multiplier): 1;
  _$jscoverage['engine.js'][305]++;
  return (a * multiplier) % (e * multiplier) === 0;
}));
    _$jscoverage['engine.js'][307]++;
    break;
  case "array":
    _$jscoverage['engine.js'][310]++;
    constrain("items", value, (function (a, e) {
  _$jscoverage['engine.js'][311]++;
  for (var i = 0, l = a.length; i < l; i++) {
    _$jscoverage['engine.js'][312]++;
    validateProperty(object, a[i], property, e, options, errors);
}
  _$jscoverage['engine.js'][314]++;
  return true;
}));
    _$jscoverage['engine.js'][316]++;
    constrain("minItems", value, (function (a, e) {
  _$jscoverage['engine.js'][317]++;
  return a.length >= e;
}));
    _$jscoverage['engine.js'][319]++;
    constrain("maxItems", value, (function (a, e) {
  _$jscoverage['engine.js'][320]++;
  return a.length <= e;
}));
    _$jscoverage['engine.js'][322]++;
    constrain("uniqueItems", value, (function (a) {
  _$jscoverage['engine.js'][323]++;
  var h = {};
  _$jscoverage['engine.js'][325]++;
  for (var i = 0, l = a.length; i < l; i++) {
    _$jscoverage['engine.js'][326]++;
    var key = JSON.stringify(a[i]);
    _$jscoverage['engine.js'][327]++;
    if (h[key]) {
      _$jscoverage['engine.js'][327]++;
      return false;
    }
    _$jscoverage['engine.js'][328]++;
    h[key] = true;
}
  _$jscoverage['engine.js'][331]++;
  return true;
}));
    _$jscoverage['engine.js'][333]++;
    break;
  case "object":
    _$jscoverage['engine.js'][337]++;
    if (schema.properties || schema.patternProperties || schema.additionalProperties) {
      _$jscoverage['engine.js'][338]++;
      self.validateObject(value, schema, options, errors);
    }
    _$jscoverage['engine.js'][340]++;
    break;
  }
}));
}), enumerable: true, writable: false}, checkType: {value: (function checkType(val, type, callback) {
  _$jscoverage['engine.js'][352]++;
  var result = false, types = Array.isArray(type)? type: [type];
  _$jscoverage['engine.js'][355]++;
  if (type === undefined) {
    _$jscoverage['engine.js'][355]++;
    return callback(null, type);
  }
  _$jscoverage['engine.js'][359]++;
  for (var i = 0, l = types.length; i < l; i++) {
    _$jscoverage['engine.js'][360]++;
    type = types[i];
    _$jscoverage['engine.js'][361]++;
    if (type === "string"? typeof val === "string": type === "array"? Array.isArray(val): type === "object"? val && typeof val === "object" && ! Array.isArray(val): type === "number"? typeof val === "number": type === "integer"? typeof val === "number" && ~ ~ val === val: type === "null"? val === null: type === "boolean"? typeof val === "boolean": type === "function"? typeof val === "function": type === "any"? typeof val !== "undefined": false) {
      _$jscoverage['engine.js'][366]++;
      return callback(null, type);
    }
}
  _$jscoverage['engine.js'][369]++;
  ;
  _$jscoverage['engine.js'][371]++;
  callback(true);
}), enumerable: true, writable: false}, error: {value: (function error(attribute, property, actual, schema, errors) {
  _$jscoverage['engine.js'][379]++;
  var lookup = {expected: schema[attribute], attribute: attribute, property: property};
  _$jscoverage['engine.js'][385]++;
  var message = schema.messages && schema.messages[attribute] || schema.message || this.messages[attribute] || "no default message";
  _$jscoverage['engine.js'][387]++;
  message = message.replace(/%\{([a-z]+)\}/gi, (function (_, match) {
  _$jscoverage['engine.js'][388]++;
  return lookup[match.toLowerCase()] || "";
}));
  _$jscoverage['engine.js'][391]++;
  errors.push({attribute: attribute, property: property, expected: schema[attribute], actual: actual, message: message});
}), enumerable: true, writable: false}});
_$jscoverage['engine.js'][405]++;
module.exports = Validator;
_$jscoverage['engine.js'].source = ["/**"," * Schema Validation"," *"," * Validators the target Object based on the Schema."," *"," * Required JavaScript capabilities:"," * - Array.isArray"," * - Object.defineProperties"," *"," * @module object-validation"," * @submodule engine"," *"," * @param target {Object}"," * @param schema"," * @param options {Object}"," * @param options.validateFormats {Object}"," * @param options.validateFormatsStrict {Object}"," * @param options.validateFormatExtensions {Object}"," *"," * @author potanin@UD"," * @date 6/15/13"," *"," * @return {{target: *, valid: boolean, errors: Array}}"," */","function Validator( target, schema, options ) {","","  if( !( this instanceof Validator ) ) {","    return new Validator( target, schema, options );","  }","","  // new Instance properties","  Object.defineProperties( this, {","    target: {","      value: target || {},","      enumerable: true","    },","    options: {","      value: options || {},","      enumerable: true","    },","    targetedProps: {","      value: [],","      enumerable: true,","      writable: true","    },","    validatedProps: {","      value: [],","      enumerable: true,","      writable: true","    },","    schema: {","      value: schema || {},","      enumerable: true","    },","    errors: {","      value: [],","      enumerable: true,","      writable: true","    }","  });","","  // Start Validation","  this.validateObject( this.target, this.schema, this.options, this.errors );","","  return {","    object: this.targetedProps,","    valid: !( this.errors.length ),","    errors: this.errors","  };","","}","","/**"," * Prototypal Properties"," *"," */","Object.defineProperties( Validator.prototype, {","  messages: {","    value: {","      required: \"is required\",","      minLength: \"is too short (minimum is %{expected} characters)\",","      maxLength: \"is too long (maximum is %{expected} characters)\",","      pattern: \"invalid input\",","      minimum: \"must be greater than or equal to %{expected}\",","      maximum: \"must be less than or equal to %{expected}\",","      exclusiveMinimum: \"must be greater than %{expected}\",","      exclusiveMaximum: \"must be less than %{expected}\",","      divisibleBy: \"must be divisible by %{expected}\",","      minItems: \"must contain more than %{expected} items\",","      maxItems: \"must contain less than %{expected} items\",","      uniqueItems: \"must hold a unique set of values\",","      format: \"is not a valid %{expected}\",","      conform: \"must conform to given constraint\",","      type: \"must be of %{expected} type\",","      enum: \"must be present in given enumerator\"","    },","    enumerable: false,","    writable: true","  },","  formats: {","    value: {","      'email': /^((([a-z]|\\d|[!#\\$%&amp;'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&amp;'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i,","      'ip-address': /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i,","      'ipv6': /^([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4}$/,","      'date-time': /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:.\\d{1,3})?Z$/,","      'date': /^\\d{4}-\\d{2}-\\d{2}$/,","      'time': /^\\d{2}:\\d{2}:\\d{2}$/,","      'color': /^#[a-z0-9]{6}|#[a-z0-9]{3}|(?:rgb\\(\\s*(?:[+-]?\\d+%?)\\s*,\\s*(?:[+-]?\\d+%?)\\s*,\\s*(?:[+-]?\\d+%?)\\s*\\))aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|and yellow$/i,","      //'style':        (not supported)","      //'phone':        (not supported)","      //'uri':          (not supported)","      'host-name': /^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])/,","      'utc-millisec': {","        test: function( value ) {","          return typeof(value) === 'number' &amp;&amp; value &gt;= 0;","        }","      },","      'regex': {","        test: function( value ) {","          try { new RegExp( value ) }","          catch( e ) { return false }","          return true;","        }","      }","    },","    enumerable: true,","    writable: true","  },","  formatExtensions: {","    value: {","      'url': /^(https?|ftp|git):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&amp;'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i","    },","    enumerable: false,","    writable: true","  },","  validateObject: {","    value: function validateObject( object, schema, options, errors ) {","      var self = this;","      var props;","      var allProps = Object.keys( object );","","      // see 5.2","      if( schema.properties ) {","        props = schema.properties;","        for( var p in props ) {","          if( props.hasOwnProperty( p ) ) {","            this.targetedProps.push( p );","","            this.validateProperty( object, object[p], p, props[p], options, errors );","          }","        }","      }","","      // see 5.3","      if( schema.patternProperties ) {","        props = schema.patternProperties;","        for( var p in props ) {","          if( props.hasOwnProperty( p ) ) {","            var re = new RegExp( p );","","            // Find all object properties that are matching `re`","            for( var k in object ) {","              if( object.hasOwnProperty( k ) ) {","                this.targetedProps.push( k );","                if( re.exec( k ) !== null ) {","                  Validator.property( object, object[k], p, props[p], options, errors );","","                }","              }","            }","          }","        }","      }","","      // see 5.4","      if( schema.additionalProperties ) {","        var i, l;","","        var unvisitedProps = allProps.filter( function( k ) {","          return (this.targetedProps.indexOf( k ) &gt; 0);","        });","","        if( schema.additionalProperties === false &amp;&amp; unvisitedProps.length &gt; 0 ) {","          for( i = 0, l = unvisitedProps.length; i &lt; l; i++ ) {","            error( \"additionalProperties\", unvisitedProps[i], object[unvisitedProps[i]], false, errors );","          }","        }","","        else if( typeof schema.additionalProperties == \"object\" &amp;&amp; unvisitedProps.length &gt; 0 ) {","          for( i = 0, l = unvisitedProps.length; i &lt; l; i++ ) {","            validateProperty( object, object[unvisitedProps[i]], unvisitedProps[i], schema.unvisitedProperties, options, errors );","          }","        }","      }","","    },","    enumerable: true,","    writable: false","  },","  validateProperty: {","    value: function validateProperty( object, value, property, schema, options, errors ) {","      var self = this;","","      var format, valid, spec, type;","","      function constrain( name, value, assert ) {","        if( schema[name] !== undefined &amp;&amp; !assert( value, schema[name] ) ) {","          self.error( name, property, value, schema, errors );","        }","      }","","      if( value === undefined ) {","        if( schema.required &amp;&amp; schema.type !== 'any' ) {","          return this.error( 'required', property, undefined, schema, errors );","        } else {","          return;","        }","      }","","      if( value === \"\" ) {","        if( schema.required &amp;&amp; schema.type === 'string' ) {","          return error( 'required', property, \"\", schema, errors );","        } else {","          return;","        }","      }","","      if( schema.format &amp;&amp; options.validateFormats ) {","        format = schema.format;","","        if( options.validateFormatExtensions ) { spec = validate.formatExtensions[format] }","        if( !spec ) { spec = validate.formats[format] }","        if( !spec ) {","          if( options.validateFormatsStrict ) {","            return error( 'format', property, value, schema, errors );","          }","        } else {","          if( !spec.test( value ) ) {","            return error( 'format', property, value, schema, errors );","          }","        }","      }","","      if( schema['enum'] &amp;&amp; schema['enum'].indexOf( value ) === -1 ) {","        error( 'enum', property, value, schema, errors );","      }","","      // Dependencies (see 5.8)","      if( typeof schema.dependencies === 'string' &amp;&amp; object[schema.dependencies] === undefined ) {","        error( 'dependencies', property, null, schema, errors );","      }","","      if( Array.isArray( schema.dependencies ) ) {","        for( var i = 0, l = schema.dependencies.length; i &lt; l; i++ ) {","          if( object[schema.dependencies[i]] === undefined ) {","            error( 'dependencies', property, null, schema, errors );","          }","        }","      }","","      if( typeof schema.dependencies === 'object' ) {","        self.validateObject( object, schema.dependencies, options, errors );","      }","","      this.checkType( value, schema.type, function( err, type ) {","        if( err ) return error( 'type', property, typeof value, schema, errors );","","        constrain( 'conform', value, function( a, e ) {","          return e( a )","        });","","        switch( type || (Array.isArray( value ) ? 'array' : typeof value) ) {","          case 'string':","            constrain( 'minLength', value.length, function( a, e ) {","              return a &gt;= e","            });","","            constrain( 'maxLength', value.length, function( a, e ) {","              return a &lt;= e","            });","","            constrain( 'pattern', value, function( a, e ) {","              e = typeof e === 'string' ? e = new RegExp( e ) : e;","              return e.test( a )","            });","            break;","","          case 'number':","            constrain( 'minimum', value, function( a, e ) {","              return a &gt;= e","            });","            constrain( 'maximum', value, function( a, e ) {","              return a &lt;= e","            });","            constrain( 'exclusiveMinimum', value, function( a, e ) {","              return a &gt; e","            });","            constrain( 'exclusiveMaximum', value, function( a, e ) {","              return a &lt; e","            });","            constrain( 'divisibleBy', value, function( a, e ) {","              var multiplier = Math.max( (a - Math.floor( a )).toString().length - 2,","                (e - Math.floor( e )).toString().length - 2 );","              multiplier = multiplier &gt; 0 ? Math.pow( 10, multiplier ) : 1;","              return (a * multiplier) % (e * multiplier) === 0","            });","            break;","","          case 'array':","            constrain( 'items', value, function( a, e ) {","              for( var i = 0, l = a.length; i &lt; l; i++ ) {","                validateProperty( object, a[i], property, e, options, errors );","              }","              return true;","            });","            constrain( 'minItems', value, function( a, e ) {","              return a.length &gt;= e","            });","            constrain( 'maxItems', value, function( a, e ) {","              return a.length &lt;= e","            });","            constrain( 'uniqueItems', value, function( a ) {","              var h = {};","","              for( var i = 0, l = a.length; i &lt; l; i++ ) {","                var key = JSON.stringify( a[i] );","                if( h[key] ) return false;","                h[key] = true;","              }","","              return true;","            });","            break;","","          case 'object':","            // Recursive validation","            if( schema.properties || schema.patternProperties || schema.additionalProperties ) {","              self.validateObject( value, schema, options, errors );","            }","            break;","","        }","","      });","","    },","    enumerable: true,","    writable: false","  },","  checkType: {","    value: function checkType( val, type, callback ) {","      var result = false, types = Array.isArray( type ) ? type : [type];","","      // No type - no check","      if( type === undefined ) return callback( null, type );","","      // Go through available types","      // And fine first matching","      for( var i = 0, l = types.length; i &lt; l; i++ ) {","        type = types[i];","        if( type === 'string' ? typeof val === 'string' : type === 'array' ? Array.isArray( val ) :","          type === 'object' ? val &amp;&amp; typeof val === 'object' &amp;&amp; !Array.isArray( val ) :","            type === 'number' ? typeof val === 'number' : type === 'integer' ? typeof val === 'number' &amp;&amp; ~~val === val :","              type === 'null' ? val === null : type === 'boolean' ? typeof val === 'boolean' :","                type === 'function' ? typeof val === 'function' : type === 'any' ? typeof val !== 'undefined' : false ) {","          return callback( null, type );","        }","      }","      ;","","      callback( true );","    },","    enumerable: true,","    writable: false","  },","  error: {","    value: function error( attribute, property, actual, schema, errors ) {","","      var lookup = {","        expected: schema[attribute],","        attribute: attribute,","        property: property","      };","","      var message = schema.messages &amp;&amp; schema.messages[attribute] || schema.message || this.messages[attribute] || \"no default message\";","","      message = message.replace( /%\\{([a-z]+)\\}/ig, function( _, match ) {","        return lookup[match.toLowerCase()] || '';","      });","","      errors.push({","        attribute: attribute,","        property: property,","        expected: schema[attribute],","        actual: actual,","        message: message","      });","","    },","    enumerable: true,","    writable: false","  },","});","","module.exports = Validator;"];
