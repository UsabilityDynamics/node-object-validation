/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['object-validation.js']) {
  _$jscoverage['object-validation.js'] = [];
  _$jscoverage['object-validation.js'][13] = 0;
  _$jscoverage['object-validation.js'][14] = 0;
  _$jscoverage['object-validation.js'][15] = 0;
  _$jscoverage['object-validation.js'][16] = 0;
  _$jscoverage['object-validation.js'][17] = 0;
  _$jscoverage['object-validation.js'][18] = 0;
  _$jscoverage['object-validation.js'][21] = 0;
  _$jscoverage['object-validation.js'][22] = 0;
  _$jscoverage['object-validation.js'][28] = 0;
  _$jscoverage['object-validation.js'][29] = 0;
  _$jscoverage['object-validation.js'][34] = 0;
  _$jscoverage['object-validation.js'][36] = 0;
  _$jscoverage['object-validation.js'][37] = 0;
  _$jscoverage['object-validation.js'][38] = 0;
  _$jscoverage['object-validation.js'][39] = 0;
  _$jscoverage['object-validation.js'][42] = 0;
  _$jscoverage['object-validation.js'][43] = 0;
  _$jscoverage['object-validation.js'][44] = 0;
  _$jscoverage['object-validation.js'][47] = 0;
  _$jscoverage['object-validation.js'][48] = 0;
  _$jscoverage['object-validation.js'][49] = 0;
  _$jscoverage['object-validation.js'][50] = 0;
  _$jscoverage['object-validation.js'][52] = 0;
}
_$jscoverage['object-validation.js'][13]++;
(function () {
  _$jscoverage['object-validation.js'][14]++;
  require("abstract").createModel((function (model, prototype) {
  _$jscoverage['object-validation.js'][15]++;
  var utility;
  _$jscoverage['object-validation.js'][16]++;
  model.engine(require("./engine"));
  _$jscoverage['object-validation.js'][17]++;
  utility = require("abstract").utility;
  _$jscoverage['object-validation.js'][18]++;
  model.properties({validate: {get: (function () {
  _$jscoverage['object-validation.js'][21]++;
  return (function (target, schema) {
  _$jscoverage['object-validation.js'][22]++;
  return model.prototype.validate.call(target, schema);
});
})}, keys: {get: (function () {
  _$jscoverage['object-validation.js'][28]++;
  return (function (target, schema) {
  _$jscoverage['object-validation.js'][29]++;
  return model.prototype.keys.call(target, schema);
});
})}});
  _$jscoverage['object-validation.js'][34]++;
  model.properties(this.prototype, {validate: (function (schema, options) {
  _$jscoverage['object-validation.js'][36]++;
  var result;
  _$jscoverage['object-validation.js'][37]++;
  result = model.engine().create(this, schema, options);
  _$jscoverage['object-validation.js'][38]++;
  result.keys = utility.unique(result.keys);
  _$jscoverage['object-validation.js'][39]++;
  return result;
}), keys: (function (schema) {
  _$jscoverage['object-validation.js'][42]++;
  var result;
  _$jscoverage['object-validation.js'][43]++;
  result = model.engine().create(this, schema);
  _$jscoverage['object-validation.js'][44]++;
  return result.keys = utility.unique(result.keys);
})});
  _$jscoverage['object-validation.js'][47]++;
  model.defineInstance((function (schema, options) {
  _$jscoverage['object-validation.js'][48]++;
  this.set("schema", schema);
  _$jscoverage['object-validation.js'][49]++;
  this.set("validation", options);
  _$jscoverage['object-validation.js'][50]++;
  return model.engine(this, schema, options);
}));
  _$jscoverage['object-validation.js'][52]++;
  return module.exports = model;
}));
}).call(this);
_$jscoverage['object-validation.js'].source = ["// Generated by CoffeeScript 1.6.3","/**","* Object Validation","*","* Validation manager.","*","* @module object-validation","* @author potanin@UD","* @constructor","*/","","","(function() {","  require('abstract').createModel(function(model, prototype) {","    var utility;","    model.engine(require('./engine'));","    utility = require('abstract').utility;","    model.properties({","      validate: {","        get: function() {","          return function(target, schema) {","            return model.prototype.validate.call(target, schema);","          };","        }","      },","      keys: {","        get: function() {","          return function(target, schema) {","            return model.prototype.keys.call(target, schema);","          };","        }","      }","    });","    model.properties(this.prototype, {","      validate: function(schema, options) {","        var result;","        result = model.engine().create(this, schema, options);","        result.keys = utility.unique(result.keys);","        return result;","      },","      keys: function(schema) {","        var result;","        result = model.engine().create(this, schema);","        return result.keys = utility.unique(result.keys);","      }","    });","    model.defineInstance(function(schema, options) {","      this.set('schema', schema);","      this.set('validation', options);","      return model.engine(this, schema, options);","    });","    return module.exports = model;","  });","","}).call(this);"];
