// instrument by jscoverage, do not modifly this file
(function () {
  var BASE;
  if (typeof global === 'object') {
    BASE = global;
  } else if (typeof window === 'object') {
    BASE = window;
  } else {
    throw new Error('[jscoverage] unknow ENV!');
  }
  if (!BASE._$jscoverage) {
    BASE._$jscoverage = {};
    BASE._$jscoverage_cond = {};
    BASE._$jscoverage_done = function (file, line, express) {
      if (arguments.length === 2) {
        BASE._$jscoverage[file][line] ++;
      } else {
        BASE._$jscoverage_cond[file][line] ++;
        return express;
      }
    };
    BASE._$jscoverage_init = function (base, file, lines) {
      var tmp = [];
      for (var i = 0; i < lines.length; i ++) {
        tmp[lines[i]] = 0;
      }
      base[file] = tmp;
    };
  }
})();
_$jscoverage_init(_$jscoverage, "lib/object-validation.js",[12,13,15,17,20,21,27,28,34,36,37,38,39,42,43,44,48,49,50,51,54]);
_$jscoverage_init(_$jscoverage_cond, "lib/object-validation.js",[]);
_$jscoverage["lib/object-validation.js"].source = ["// Generated by CoffeeScript 1.6.3","/**","* Object Validation","*","* Validation manager.","*","* @module object-validation","* @author potanin@UD","* @constructor","*/","","require( 'abstract' ).createModel( function( model, prototype ) {","  var utility;","","  utility = require( 'abstract' ).utility;","","  model.properties( {","    validate: {","      get: function() {","        return function( target, schema ) {","          return model.prototype.validate.call( target, schema );","        };","      }","    },","    keys: {","      get: function() {","        return function( target, schema ) {","          return model.prototype.keys.call( target, schema );","        };","      }","    }","  });","","  model.properties( this.prototype, {","    validate: function( schema, options ) {","      var result;","      result = require( './engine' ).create( this, schema, options );","      result.keys = utility.unique( result.keys );","      return result;","    },","    keys: function( schema, options ) {","      var result;","      result = require( './engine' ).create( this, schema, options );","      return result.keys = utility.unique( result.keys );","    }","  });","","  model.defineConstructor( function create( schema, options ) {","    this.set( 'schema', schema );","    this.set( 'validation', options );","    return require( './engine' ).create( this, schema, options );","  });","","  return module.exports = model;","","});",""];
_$jscoverage_done("lib/object-validation.js", 12);
require("abstract").createModel(function(model, prototype) {
    _$jscoverage_done("lib/object-validation.js", 13);
    var utility;
    _$jscoverage_done("lib/object-validation.js", 15);
    utility = require("abstract").utility;
    _$jscoverage_done("lib/object-validation.js", 17);
    model.properties({
        validate: {
            get: function() {
                _$jscoverage_done("lib/object-validation.js", 20);
                return function(target, schema) {
                    _$jscoverage_done("lib/object-validation.js", 21);
                    return model.prototype.validate.call(target, schema);
                };
            }
        },
        keys: {
            get: function() {
                _$jscoverage_done("lib/object-validation.js", 27);
                return function(target, schema) {
                    _$jscoverage_done("lib/object-validation.js", 28);
                    return model.prototype.keys.call(target, schema);
                };
            }
        }
    });
    _$jscoverage_done("lib/object-validation.js", 34);
    model.properties(this.prototype, {
        validate: function(schema, options) {
            _$jscoverage_done("lib/object-validation.js", 36);
            var result;
            _$jscoverage_done("lib/object-validation.js", 37);
            result = require("./engine").create(this, schema, options);
            _$jscoverage_done("lib/object-validation.js", 38);
            result.keys = utility.unique(result.keys);
            _$jscoverage_done("lib/object-validation.js", 39);
            return result;
        },
        keys: function(schema, options) {
            _$jscoverage_done("lib/object-validation.js", 42);
            var result;
            _$jscoverage_done("lib/object-validation.js", 43);
            result = require("./engine").create(this, schema, options);
            _$jscoverage_done("lib/object-validation.js", 44);
            return result.keys = utility.unique(result.keys);
        }
    });
    _$jscoverage_done("lib/object-validation.js", 48);
    model.defineConstructor(function create(schema, options) {
        _$jscoverage_done("lib/object-validation.js", 49);
        this.set("schema", schema);
        _$jscoverage_done("lib/object-validation.js", 50);
        this.set("validation", options);
        _$jscoverage_done("lib/object-validation.js", 51);
        return require("./engine").create(this, schema, options);
    });
    _$jscoverage_done("lib/object-validation.js", 54);
    return module.exports = model;
});